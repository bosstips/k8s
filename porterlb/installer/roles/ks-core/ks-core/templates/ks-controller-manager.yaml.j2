apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ks-controller-manager
    tier: backend
    version: {{ ks_version }}
  name: ks-controller-manager
  namespace: kubesphere-system
spec:
  strategy:
    rollingUpdate:
      maxSurge: 0
    type: RollingUpdate
  progressDeadlineSeconds: 600
{% if master_num is defined and master_num != "0" %}
  replicas: {{ master_num }}
{% else %}
  replicas: 1
{% endif %}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: ks-controller-manager
      tier: backend
      version: {{ ks_version }}
  template:
    metadata:
      labels:
        app: ks-controller-manager
        tier: backend
        version: {{ ks_version }}
    spec:
      containers:
      - command:
        - controller-manager
        - --logtostderr=true
        - --leader-elect=true
        image: {{ ks_controller_manager_repo }}:{{ ks_controller_manager_tag }}
        imagePullPolicy: {{ ks_image_pull_policy }}
        name: ks-controller-manager
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 8443
          protocol: TCP
        resources:
          limits:
            cpu: 1000m
            memory: 1000Mi
          requests:
            cpu: 30m
            memory: 50Mi
        volumeMounts:
        - mountPath: /etc/kubesphere/
          name: kubesphere-config
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: webhook-secret
        - mountPath: /etc/localtime
          name: host-time
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccount: kubesphere
      serviceAccountName: kubesphere
      terminationGracePeriodSeconds: 30
      volumes:
        - name: kubesphere-config
          configMap:
            name: kubesphere-config
            defaultMode: 420
        - name: webhook-secret
          secret:
            defaultMode: 420
            secretName: ks-controller-manager-webhook-cert
        - hostPath:
            path: /etc/localtime
            type: ""
          name: host-time
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 60
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 60
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: In
                values:
                - ""
{% if master_num is defined and master_num != "1" %}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: kubernetes.io/hostname
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - ks-controller-manager
            namespaces:
            - kubesphere-system
{% endif %}

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: ks-controller-manager
    tier: backend
    version: {{ ks_version }}
  name: ks-controller-manager
  namespace: kubesphere-system
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 8443
  selector:
    app: ks-controller-manager
    tier: backend
    version: {{ ks_version }}
  sessionAffinity: None
  type: ClusterIP
